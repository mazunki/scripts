#!/bin/sh
# 
# Does diff confuse you at times, and the diff config
# settings seems sp00k13? Don't worry.
# 
# Usage:
#	fmtdiff [options] filename/or/directory
#
# Options
#	[ -f | --from ] path:
#		Sets the basepath to the source file(s)
#		Defaults to /usr/share if --to is /etc
#
#	[ -t | --to ] path
#		Sets the basepath to the modified file(s)
#		Defaults to /etc
#
#	[ -I | --ignore ] regex-pattern
#		Sets a regex pattern to lines you don't care about
#
#	-i
#		Ignores casing in files
#	-b
#		Ignores whitespace changes (only the amount)
#	-w
#		Ignores whitespace differences
#
# Dependencies:
#	- diff
#	- sed (if using a directory)
#	- sed (if using a directory)
# 
# Example:
#	fmtdiff -w pipewire
# 

OLD=$'\033[38;5;124m'
NEW=$'\033[38;5;40m'
INFO=$'\033[38;5;62m'
RESET=$'\033[0m'

OPTARGS=$(getopt --options f:t:I:iBbw --longoptions from:,to:,ignore: -- "$@") || exit 1

OPTS=""

eval set -- "$OPTARGS"
while :
	do case "$1" in
		-f | --from) FROM="$2" ; shift 2 ;;
		-t | --to) TO="$2" ; shift 2 ;;
		-I | --ignore) IGNORE="$2" ; shift 2 ;;
		-i ) OPTS="${OPTS} --ignore-case" ; shift ;;
		-B ) OPTS="${OPTS} --ignore-blank-lines" ; shift ;;
		-b ) OPTS="${OPTS} --ignore-space-change" ; shift ;;
		-w ) OPTS="${OPTS} --ignore-all-space" ; shift ;;
		--) shift; break ;;
		*) echo "Wrong option passed: $1" ;;
	esac
done

[ -z "$TO" ] && [ -z "$FROM" ] && TO="/etc"
[ -z "$FROM" ] && [ "$TO" = "/etc" ] && FROM="/usr/share"
[ -z "$TO" ] && [ "$FROM" = "/usr/share" ] && TO="/etc"

[ -z "$IGNORE" ] && IGNORE="^$"
IGNORE=$(echo "${IGNORE}" | sed 's:/:\\/:g')

wrapper() {
	[ -z "$1" ] && return
	[ -e "${FROM}/$filename" ] || printf "${INFO}File not found${RESET}: ${FROM}%s${RESET}\n" "${TO}/${filename}"
	[ -e "${TO}/$filename" ] || printf "${INFO}File not found${RESET}: ${NEW}%s${RESET}\n" "${TO}/${filename}"

	difference=$(diff \
		${OPTS} \
		--unchanged-line-format="" \
		--old-line-format="${OLD}%dn${RESET}: %L" \
		--new-line-format="${NEW}%dn${RESET}: %L" \
		--from-file <( sed "s/^[[:space:]]*${IGNORE}.*//" "${FROM}/$1" )\
		<( sed "s/^[[:space:]]*${IGNORE}.*//" "${TO}/$1" ) | \
		awk '$2 { print }'
	)

	ORIGFILE_FMT="${OLD}${FROM}/${filename}${RESET}"
	CURRFILE_FMT="${NEW}${TO}/${filename}${RESET}"
	if [ -n "$difference" ]; then
		echo "Original file: ${ORIGFILE_FMT}"
		echo "Current file: ${CURRFILE_FMT}"
		echo "${INFO}>>> DIFF${RESET}"
			printf "%s\n" "$difference"
		echo "${INFO}<<< DONE${RESET}"
	else
		printf "${INFO}No difference between file:${RESET} {${OLD}${FROM}${RESET},${NEW}${TO}${RESET}}/${INFO}%s${RESET}\n" "${filename}"
	fi

	echo ""
}

if [ -d "${FROM}/$1" ]; then
	find "${FROM}/$1" -type f | \
		while read -r origfilename; do
			filename=$(echo "${origfilename}" | sed "s:^${FROM}/::")
			[ -e "${FROM}/$filename" ] && [ -e "${TO}/$filename" ] && wrapper "$filename"
		done
else
	wrapper "$1"
fi

